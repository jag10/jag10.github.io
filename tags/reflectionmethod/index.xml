<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Reflectionmethod on Arboleda</title>
    <link>https://www.jarboleda.me/tags/reflectionmethod/</link>
    <description>Recent content in Reflectionmethod on Arboleda</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 01 May 2016 13:28:37 +0200</lastBuildDate>
    
	<atom:link href="https://www.jarboleda.me/tags/reflectionmethod/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Getting an object&#39;s (reflected) methods</title>
      <link>https://www.jarboleda.me/articles/getting-an-objects-methods/</link>
      <pubDate>Sun, 01 May 2016 13:28:37 +0200</pubDate>
      
      <guid>https://www.jarboleda.me/articles/getting-an-objects-methods/</guid>
      <description>&lt;h2 id=&#34;the-problem&#34;&gt;The problem&lt;/h2&gt;

&lt;p&gt;Sometimes we don&amp;rsquo;t have access to the platform docs on which we are working, it&amp;rsquo;s incomplete or we just don&amp;rsquo;t feel like looking for it. In those situations, we usually need more than the typical object&amp;rsquo;s &lt;code&gt;var_dump&lt;/code&gt;, which only shows us the object properties but not its methods, which usually gives us that function we are working on without having to dive into the object&amp;rsquo;s properties. Here you&amp;rsquo;ll see the function I use for this task. This function uses the ReflectionMethod class, which gives us info about a method. It needs the classname and method&amp;rsquo;s name as params for its constructor.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>